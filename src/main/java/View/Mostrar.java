/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package View;

import static Controller.Controlador.*;
import Model.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class Mostrar extends javax.swing.JDialog {

    /**
     * Creates new form Baja
     */
    public Mostrar(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();

        setLocationRelativeTo(null);
        setResizable(false);

        info.setEditable(false);
        info.setFocusable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        titulo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nombreslista = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        info = new javax.swing.JTextPane();
        jLabel3 = new javax.swing.JLabel();
        filtro = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        titulo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        titulo.setText(" Planeta/Ciudadano ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanel1.add(titulo, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText(" Nombre: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 40, 10, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        nombreslista.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        nombreslista.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                nombreslistaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(nombreslista, gridBagConstraints);

        jScrollPane1.setViewportView(info);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 7;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.ipady = 200;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText(" Filtro: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jLabel3, gridBagConstraints);

        filtro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Planetas", "Ciudadanos" }));
        filtro.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                filtroPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 40);
        jPanel1.add(filtro, gridBagConstraints);

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 40, 10);
        jPanel1.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Al abrir la ventan se ejecuta el codigo que esta adentro
     *
     * @param evt
     */
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:

        nombreslista.removeAllItems();
        for (Planeta p : allplanet) {
            nombreslista.addItem(p.getName());
            for (Ser s : p.getPopulation()) {
                nombreslista.addItem(s.getName());
                String nombre = (String) nombreslista.getSelectedItem();
                if (getHashCodeSer(new Ser(nombre)) != null) {
                    Ser sm = getHashCodeSer(new Ser(nombre));
                    Planeta ps = getPlanetaSer(sm);
                    info.setText(sm.toString() + "\n" + "Planeta: " + ps.getName());

                } else if (getHashCodePlanet(new Planeta(nombre)) != null) {
                    Planeta pm = getHashCodePlanet(new Planeta(nombre));
                    info.setText(pm.toString());

                }

            }

        }


    }//GEN-LAST:event_formWindowOpened

    private void filtroPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_filtroPopupMenuWillBecomeInvisible
        // TODO add your handling code here:

        nombreslista.removeAllItems();

        int cont = 0;

        if (filtro.getSelectedItem().toString().equalsIgnoreCase("Todos")) {
            for (Planeta p : allplanet) {
                // Recorrer el HashSet de ciudadanos de cada planeta
                nombreslista.addItem(p.getName());
                for (Ser s : p.getPopulation()) {
                    nombreslista.addItem(s.getName());
                    String nombre = (String) nombreslista.getSelectedItem();
                    cont++;
                    if (getHashCodeSer(new Ser(nombre)) != null) {
                        Ser sm = getHashCodeSer(new Ser(nombre));
                        Planeta ps = getPlanetaSer(sm);
                        info.setText(sm.toString() + "\n" + "Planeta: " + ps.getName());

                    } else if (getHashCodePlanet(new Planeta(nombre)) != null) {
                        Planeta pm = getHashCodePlanet(new Planeta(nombre));
                        info.setText(pm.toString());

                    }
                }
                System.out.println("TODOS");

            }

        } else if (filtro.getSelectedItem().toString().equalsIgnoreCase("Planetas")) {
            for (Planeta p : allplanet) {
                nombreslista.addItem(p.getName());
                if (nombreslista.getSelectedItem().equals(p.getName())) {
                    info.setText(p.toString());
                    cont++;
                }
                System.out.println("PLANETAS");
//                String nombre = (String) nombreslista.getSelectedItem();
            }
            if (cont == 0) {

            }
        } else if (filtro.getSelectedItem().toString().equalsIgnoreCase("Ciudadanos")) {
            for (Planeta planeta : allplanet) {
                // Recorrer el HashSet de ciudadanos de cada planeta
                for (Ser ser : planeta.getPopulation()) {
                    nombreslista.addItem(ser.getName());
                    cont++;
                    info.setText(null);

                    String nombre = (String) nombreslista.getSelectedItem();
                    Ser s = getHashCodeSer(new Ser(nombre));
                    Planeta ps = getPlanetaSer(s);
                    info.setText(s.toString() + "\n" + "Planeta: " + ps.getName());

                    System.out.println("CIUDADANOS");
                }
            }

            if (cont == 0) {
                for (Planeta p : allplanet) {
                    nombreslista.addItem(p.getName());
                    cont++;
                    String nombre = (String) nombreslista.getSelectedItem();
                    info.setText(p.toString());
                    System.out.println("PLANETAS");
                }
                JOptionPane.showMessageDialog(this, "No hay ciudadanos", "Ciudadanos Insuficientes", JOptionPane.WARNING_MESSAGE);
                filtro.setSelectedIndex(0);

            }
        }
    }//GEN-LAST:event_filtroPopupMenuWillBecomeInvisible

    private void nombreslistaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_nombreslistaPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        String nombre = (String) nombreslista.getSelectedItem();

        if (getHashCodePlanet(new Planeta(nombre)) != null) {
            Planeta p = getHashCodePlanet(new Planeta(nombre));
            info.setText(p.toString());

        } else if (getHashCodeSer(new Ser(nombre)) != null) {

            Ser s = getHashCodeSer(new Ser(nombre));
            Planeta ps = getPlanetaSer(s);
            info.setText(s.toString() + "\n" + "Planeta: " + ps.getName());
        }
    }//GEN-LAST:event_nombreslistaPopupMenuWillBecomeInvisible

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:        
        dispose();


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Baja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Baja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Baja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Baja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Baja dialog = new Baja(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> filtro;
    private javax.swing.JTextPane info;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> nombreslista;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
}
